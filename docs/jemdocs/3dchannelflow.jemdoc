# jemdoc: menu{MENU}{3dchannelflow.html},addpackage{amsmath},addpackage{amssymb}
# jemdoc: addcss{jemdoc.css}
# jemdoc: addcss{bibover.css}
#include{masterFile_2.jeminc}
#include{mj-complete-bib_3.jeminc}
= Channel flow of a Newtonian fluid
~~~
{}{raw}
<figure>
  <img src="pics/ChannelFlow.svg" alt="3dflow" style="width:50%">
  <p>Fig. 1 Channel flow geometry with base velocity profiles.</p>
</figure>
~~~

The evolution of infinitesimal velocity $[\,u\;\;v\;\;w\,]^T$ and pressure $p$ fluctuations around a base flow $[\,U(y) \;\; 0 \;\; 0\,]^T$ is governed by the linearized Navier-Stokes (NS) equations,
\(
	\begin{equation}
    \begin{array}{rclcrcrcr}
    \partial_{t} u 
    & = &
    (
    (1/Re) \, \Delta 
    \, - \, 
    {\mathrm i} k_x U (y)
    )
    \,
    u
    & - &
    U' (y) \, v
    & - & 
    {\mathrm i} k_x \, p 
    & + &  
    d_u,
    \\[.15cm]
    \partial_{t} {v} 
    & = &
    (
    (1/Re) \, \Delta 
    \, - \, 
    {\mathrm i} k_x U (y)
    )
    \,
    v
    & & 
    & - &
    {\partial_y} \, p  
    & + & 
    d_v,
    \\[.15cm]
    \partial_{t} {w} 
    & = &
    (
    (1/Re) \, \Delta 
    \, - \, 
    {\mathrm i} k_x U (y)
    )
    \,
    w
    & &
    & - &
    {\mathrm i} k_z \, p 
    & + &
    d_w,
    \\[.15cm]
    0
    & = &
    {\mathrm i} k_x u 
    \; + \; 
    {\partial_y} \, v 
    \; + \; 
    {\mathrm i} k_z w.
    & & & & & &
    \end{array}
    \label{eq:1}
    \end{equation}
\)
Here, $U' (y) = {\mathrm d} U (y)/ {\mathrm d} y$, ${\mathbf d} = [\,d_u\,\;d_v\,\;d_w\,]^T$ is the body forcing fluctuation vector, $u$, $v$, and $w$ are velocity fluctuations in the streamwise, $x$, wall-normal, $y$, and spanwise, $z$, directions, $k_x$ and $k_z$ are wall-parallel wavenumbers, $Re$ is the Reynolds number, $\Delta = \partial_{yy} - (k_x^2 + k_z^2) I$ is the Laplacian, and $\mathrm i$ is the imaginary unit. The base velocity is determined by $U(y) = 1 - y^2$ in pressure-driven (Poiseuille) and $U(y) = y$ in shear-driven (Couette) flow. Equivalently, Eq.~$\eqref{eq:1}$ along with the boundary conditions can be represented as (see Chapter 3 of [/javascript:cite('schmid2012stability') Stability and transition in shear flows]),
\(
	\begin{alignat}{3}
  \partial_{t} [\mathcal{E} \, \boldsymbol \phi( \cdot , t)](y) \;&=\; [\mathcal{F}\, \boldsymbol \phi(\cdot , t)](y) \,+\, [\mathcal{B}\,{\mathbf d}(\cdot,t)](y),&&\notag
  \\[0.1cm]
    \boldsymbol \xi (y,t) \;&=\; [\mathcal {C}\,\boldsymbol\phi(\cdot,t)](y),&\label{eq:2}
    \\[0.1cm]
   [\mathcal {L}_{ \pm 1} \, \boldsymbol \phi(\cdot,t)]( \pm 1)  
   \;&=\; 
   0,&\notag
\end{alignat}
	\)	
where $\boldsymbol{\phi} = [\,v \;\; \eta\,]^T$ where $\eta = \mathrm i\, k_z\, u - \mathrm i \, k_x\,w$ is the wall-normal vorticity, $\boldsymbol{\xi} = [\,u \;\; v \;\; w\,]^T$, and 
\(
	\begin{array}{rclrcl}
	\mathcal{E} 
	& \!\! = \!\! & 
	\left[\begin{array}{cc}
	\Delta & 0\\
	0 & I
	\end{array}
	\right], 
	& 
	\mathcal{F}
	& \!\! = \!\! & 
	\left[\begin{array}{cccc}
     -\mathrm i \, k_x \, U\Delta + \mathrm i \, k_x \, U'' + (1/Re)\Delta^2 & 0\\
     -\mathrm i \,k_z\, U' & -\mathrm i\,k_x U + (1/Re)\Delta
	\end{array}
	\right],
	\\
	\mathcal{B} 
	& \!\! = \!\! &  
	\left[\begin{array}{ccc}
	-\mathrm i\, k_x\, \partial_y & -k^2 & -\mathrm i\, k_z\, \partial_y \\
	\mathrm i\, k_z & 0 & -\mathrm i\, k_x
	\end{array}
	\right], 
	& 
	\mathcal{C}
	& \!\! = \!\! & 
	\frac{1}{k^2}\left[\begin{array}{cc}
    \mathrm i\,k_x \,\partial_y & -\mathrm i\, k_z\\
    k^2 & 0\\
    \mathrm i\, k_z \partial_y & \mathrm i \, k_x
	\end{array}
	\right], \qquad \mathcal{L}_{\pm 1} 
	\;=\;  
	\left[\begin{array}{cc}
		\partial_y & 0 \\
		I & 0 \\
		0 & I 
	\end{array}\right].
	\end{array}
	\)

== Frequency response analysis

=== Problem
Reproduce Figure 4.10 in [/javascript:cite('schmid2012stability') Stability and transition in shear flows], i.e., compute the principal singular values of the frequency response operator associated with the linearized NS equations in Poiseuille flow with $Re = \{500,1000,2000,4000\}$ and $k_x = k_z = 1$. Next, determine the $H_\infty$ norm, i.e., the peak value of $\sigma_{\max} (\omega)$ over temporal frequencies with $Re = 2000$.

=== Solution
The temporal Fourier transform can be used to represent the frequency response operator associated with the linearized NS equations as a TPBVP,
\(
\begin{align}
    \left[\mathcal A(\omega)\,\boldsymbol \phi(\cdot)\right] (y) 
    \;&=\; 
    \left[\mathcal B(\omega)\, {\mathbf d} (\cdot)\right](y),\notag
    \\
    \boldsymbol \xi (y)
    \;&=\; 
    \left[\mathcal C(\omega)\, \boldsymbol \phi(\cdot)\right](y),\label{eq:mot1c}
    \\
    [\mathcal{L}_{\pm 1} \, \boldsymbol \phi(\cdot)](\pm 1)  
    \;&=\; 0,
    \notag
  \end{align}  
\)
where $\mathcal{A} (\omega) = {\mathrm i} \omega \mathcal{E} -\mathcal{F}$,
\(
\mathcal A
	\;=\;
  \left[\begin{array}{cccc}
     \mathrm i \, \omega \hat{\Delta} + \mathrm i \, k_x \, U\hat{\Delta} - \mathrm i \, k_x \, U'' - (1/Re)\hat{\Delta}^2 & 0\\
     \mathrm i \,k_z\, U' & \mathrm i \,\omega +  \mathrm i\,k_x U - (1/Re)\hat{\Delta}
	\end{array}
	\right],	
\)

where $\hat{\Delta} = \mathrm D^2 - k_z^2$ with $\mathrm D = \mathrm d/\mathrm dy$, and $\mathcal{A}^{-1} (\omega)$ is the resolvent operator. 

A feedback interconnection of the frequency response operator with its adjoint can be used to compute singular values (see the [/javascript:cite('harkumjovJCP21') accompanying paper] and [/javascript:cite('Boyd1989') Boyd]),
\(
  \begin{align}
\left[
\begin{array}{cc}
  0 &\mathcal{B}\mathcal{B}^{\dagger} \\
   \mathcal{C}^{\dagger}\mathcal{C}&0
\end{array} \right] \left[ \begin{array}{c}
   \boldsymbol \phi(y)
   \\
   \boldsymbol \psi(y)
\end{array} \right]   
	\;&=\; 
\gamma 
\left[\begin{array}{cc}
  \mathcal{A} & 0\\
  0 & \mathcal{A}^{\dagger}
\end{array}\right]\left[ \begin{array}{c}
   \boldsymbol \phi (y)\\
   \boldsymbol \psi (y)
\end{array} \right], \notag
	\\
	[ \mathcal{L}_{\pm 1} \, \boldsymbol \phi(\cdot) ] (\pm 1)
	\;&=\; 
	0, \label{eq:feedback}
	\\
	[ \mathcal{L}^{\dagger}_{\pm 1} \, \boldsymbol \psi (\cdot) ] (\pm 1)
	\;&=\; 
	0, \notag
\end{align}
\)
where $(\cdot)^{\dagger}$ denotes adjoint of the operator $(\cdot)$ and $\boldsymbol \psi$ is the variable associated with the adjoint operator. The resulting eigenvalues determine the singular values in pairs of opposite signs, i.e., $\gamma = \pm \sigma$.

The operators $\mathcal A (\omega)$, $\mathcal B(\omega)$, and $\mathcal C(\omega)$ in~$\eqref{eq:mot1c}$ can be expressed in Matlab using the Chebfun syntax as,
~~~
{Operators in TPBVP}{matlab}
y = chebfun('y',[-1,1]);
U = 1 - y*y;              % For Poiseuille flow, or U = y for Couette flow
Uy = diff(U);
Uyy = diff(Uy);

A = chebop([-1,1]);       % Operator A
B = chebop([-1,1]);       % Operator B
C = chebop([-1,1]);       % Operator C

A.op = @(y,v,eta)([1i*omega*(diff(v,2) - k2*v) - (diff(v,4)-2*k2*diff(v,2) 
        + k4*v)/Re - 1i*kx*Uyy*v  + 1i*kx*U*(diff(v,2) - k2*v);
        1i*omega*eta + 1i*kz*Uy*v + 1i*kx*U*eta - (diff(eta,2) - k2*eta)/Re]);

B.op = @(y,dx,dy,dz) ([-1i*kx*diff(dx) - k2*dy - 1i*kz*diff(dz);
                        1i*kz*dx - 1i*kx*dz]);
C.op = @(y,v,eta)([1i*kx*diff(v)/k2 - 1i*kz*eta/k2;
                v ; 
                1i*kz*diff(v)/k2 + 1i*kx*eta/k2]);
~~~
\n
The boundary conditions are given by no-slip and no-penetration,
\(
v(\pm 1)  \;=\;  v'(\pm 1)  \;=\;  \eta(\pm 1)  \;=\;  0
\)
\n

These can again be input in the Chebfun syntax,
~~~
{Boundary conditions}{matlab}
A.lbc = @(v,eta)[v;diff(v);eta];
A.rbc = @(v,eta)[v;diff(v);eta];
~~~
~~~
{Compute singular values}{matlab}
sval = svdfr(A,B,C);
~~~

The full solution involves singular value calculations over linearly sampled frequencies, and can be found in [../schmidSols.m schmidSols.m].

~~~
{}{raw}
<figure>
  <img src="pics/schmidSols.svg" alt="3dflow" style="width:50%">
  <p>Fig.2 Principal singular values as a function of temporal frequency</br> generated using <a href="../schmidSols.m">svdfr/schmidSols.m</a>. A reference for this
  is Figure 4.10</br> in <a href="javascript:cite('schmid2012stability')">Stability and transition in shear flows</a></p>
</figure>
~~~

We next compute the ${H}_\infty$ norm: the peak value of all singular values over all temporal frequencies $\omega\in \mathbb R$ using the fast algorithm by [javascript:cite('BRUINSMA1990287') Bruinsma and Steinbuch]. This, and its relation to the feedback interconnected system is discussed toward the end of Section~IIIA in the [/javascript:cite('harkumjovJCP21') accompanying paper]. 

We provide the function +hinfNorm+ that computes the ${H}_\infty$ norm given $\mathcal{E}$, $\mathcal{F}$, $\mathcal{B}$, and $\mathcal{C}$, in the system representation, Eq.~$\eqref{eq:2}$.

The following code computes the ${H}_\infty $ norm for Poiseuille flow with $Re = 2000$, and $k_x = k_z = 1$. The code generates outputs as the optimal frequency $\omega = -0.385$ and ${H}_\infty $ norm for this set of parameters as $395.6$.

~~~
{Problem data}{matlab}
ii = sqrt(-1);      % Imaginary unit
Re = 2000;          % Reynolds number
kx = 1; kz = 1;     % Spatial wavenumbers
k2 = kx*kx + kz*kz;
k4 = k2*k2;
~~~
~~~
{Operators in TPBVP}{matlab}
E = chebop([-1,1]);      % Operator E
F = chebop([-1,1]);      % Operator F
B = chebop([-1,1]);      % Operator B
C = chebop([-1,1]);      % Operator C
y = chebfun('y');

U = 1 - y*y;             % For Poiseuille flow, or U = y for Couette flow
Uy = diff(U);
Uyy = diff(Uy);


E.op = @(x,v,eta)([(diff(v,2) - k2*v);...
                    eta]);
F.op = @(x,v,eta)([ (diff(v,4)-2*k2*diff(v,2) ...
        + k4*v)/Re + ii*kx*Uyy*v  - ii*kx*U*(diff(v,2) - k2*v);...
        - ii*kz*Uy*v - ii*kx*U*eta + (diff(eta,2) - k2*eta)/Re]);

F.lbc = @(v,eta)[diff(v);v;eta];
F.rbc = @(v,eta)[diff(v);v;eta];

B.op = @(x,dx,dy,dz) ([-ii*kx*diff(dx) - k2*dy - ii*kz*diff(dz);...
                        ii*kz*dx - ii*kx*dz]);
C.op = @(x,v,eta)([ii*kx*diff(v)/k2 - ii*kz*eta/k2;...
                v ; ...
                ii*kz*diff(v)/k2 + ii*kx*eta/k2]);
~~~
~~~
{Compute the H-infinity norm}{matlab}
% Restrict dimension to 1000 Chebyshev polynomials for speed
cheboppref.setDefaults('maxDimension',1000); 
[omega_opt,gamma_opt] = hinfNorm(E,F,B,C);
~~~

=== Problem 
Plot most amplified structures of streamwise velocity fluctuations ($3$D isosurface plots) and the corresponding spanwise body force for $Re = 2000$, $k_x = 1$, and $\omega = -0.385$. 

=== Solution
~~~
{}{matlab}
% Set parameters and base velocity
Re = 2000;                  % Reynolds number
kxval = [1 1 -1 -1];        % streamwise wavenumber
kzval = [1 -1 1 -1];        % spanwise wavenumber
omval  = 0.385*[-1 -1 1 1]; % temporal frequency

y = chebfun('y');  

U = 1 - y^2;                % base flow (Poiseuille; U = y for Couette)
Uy = diff(U);               % derivative of U
Uyy = diff(U,2);            % second derivative of U

% Looping over kx, kz, and om
N = 200;                    % Grid size for plotting in y-direction
uvec = zeros(N,length(kxval)); 
dzvec = zeros(N,length(kxval));

for n = 1:length(kxval)

    kx = kxval(n); kz = kzval(n); omega = omval(n);
    kx2 = kx*kx; kz2 = kz*kz;
    k2 = kx2 + kz2;

    A = chebop([-1,1]);     % Operator A
    B = chebop([-1,1]);     % Operator B
    C = chebop([-1,1]);     % Operator C

    A.op = @(x,v,eta)([1i*omega*(diff(v,2) - k2*v) - (diff(v,4)-2*k2*diff(v,2) ...
            + k4*v)/Re - 1i*kx*Uyy*v  + 1i*kx*U*(diff(v,2) - k2*v);...
            1i*omega*eta + 1i*kz*Uy*v + 1i*kx*U*eta - (diff(eta,2) - k2*eta)/Re]);

    A.lbc = @(v,eta)[diff(v);v;eta];
    A.rbc = @(v,eta)[diff(v);v;eta];

    B.op = @(x,dx,dy,dz) ([-1i*kx*diff(dx) - k2*dy - 1i*kz*diff(dz);...
                            1i*kz*dx - 1i*kx*dz]);
    C.op = @(x,v,eta)([1i*kx*diff(v)/k2 - 1i*kz*eta/k2;...
                    v ; ...
                    1i*kz*diff(v)/k2 + 1i*kx*eta/k2]);

    % Compute the singular function
    [PhiAndPsi,sval] = svdfr(A,B,C,1);

    % velocities
    uvw = C(PhiAndPsi(1:2,:));  % First two variables are the regular variables, 
                                % v and eta, so that Phi = [v;eta]. 
                                % Note C(Phi) gives the output, [u;v;w] 
    u = uvw.blocks{1};          % streamwise velocity
    v = uvw.blocks{2};          % wall-normal velocity
    w = uvw.blocks{3};          % spanwise velocity
    
    % Body forces:
    Bad = adjointNS(B);             % The body forces are computed as Bad(Psi);
    dxdydz = Bad(PhiAndPsi(3:4,:)); % The second two arguments are Psi, the 
                                    % auxiliary variables for the adjoint system
    dx = dxdydz.blocks{1};
    dy = dxdydz.blocks{2};
    dz = dxdydz.blocks{3};
    
    uvec(:,n) = u(chebpts(N)); 
    dzvec(:,n) = dz(chebpts(N));
    
end

kx = abs(kxval(1)); kz = abs(kzval(1));
zval = linspace(-7.8, 7.8, 100);    % spanwise coordinate
xval = linspace(0, 12.7, 100);      % streamwise coordinate

Up = zeros(length(zval),length(xval),N);    % physical value of u
Dp = zeros(length(zval),length(xval),N);    % physical value of dz

for indx = 1:length(xval)
    x = xval(indx);
    for indz = 1:length(zval)
        z = zval(indz);
        for n = 1:4

            kx = kxval(n); kz = kzval(n);

            Up(indz,indx,:) =  squeeze(Up(indz,indx,:)) + ...
                uvec(:,n)*exp(1i*kx*x + 1i*kz*z);

            Dp(indz,indx,:) =  squeeze(Dp(indz,indx,:)) + ...
                dzvec(:,n)*exp(1i*kx*x + 1i*kz*z);
        end
    end
end
Up = real(Up); Dp = real(Dp); % only real part exist
~~~
Now, we plot isosurfaces of the optimal flow structures.
~~~
{}{matlab}
%% Plot isosurfaces of optimal flow structures
clf
Upmax = max(max(max(Up)));
val = 0.2*Upmax;
ypt = chebpts(N);

[X,Z,Y] = meshgrid(xval,zval,ypt);
p = patch(isosurface(X,Z,Y,Up,val));
hh = isonormals(xval,zval,ypt,Up,p);
p.FaceColor = 'red';
p.EdgeColor = 'none';
daspect('auto')
view(3);
ax = gca;
xlabel('$x$');
ylabel('$z$');ax.YTick = -10:5:10;
zlabel('$y$');ax.ZTick = -1:0.5:1;
camlight

hold on
p = patch(isosurface(X,Z,Y,Up,-val));
isonormals(xval,zval,ypt,Up,p);
p.FaceColor = 'green';
p.EdgeColor = 'none';
print('-painters','-djpeg','docs/pics/Code4_2');
disp('done');
hold off
~~~

~~~
{}{raw}
<figure>
  <img src="pics/Code4_2.jpg" alt="3dflow" style="width:50%">
  <p>Fig.3 Isosurfaces of the optimal flow structure for </br> the frequency
  responses of Poiseuille flow with</br> \(Re = 2000\), \(k_x = k_z = 1\), and \(\omega = 0\).</br> This plot is generated using <a href="../channelFlow3D.m">svdfr/channelFlow3D.m</a></p>
</figure>
~~~

We next plot the corresponding spanwise body force. 
~~~
{}{matlab}
%% Plot isosurfaces of the corresponding body force
clf

dpmax = max(max(max(Dp)));
val = 0.2*dpmax;
ypt = chebpts(N);

[X,Z,Y] = meshgrid(xval,zval,ypt);
p = patch(isosurface(X,Z,Y,Dp,val));
hh = isonormals(xval,zval,ypt,Dp,p);
p.FaceColor = 'blue';
p.EdgeColor = 'none';
daspect('auto')
view(3);
ax = gca;
xlabel('$x$');
ylabel('$z$');ax.YTick = -10:5:10;
zlabel('$y$');ax.ZTick = -1:0.5:1;
camlight

hold on
p = patch(isosurface(X,Z,Y,Dp,-val));
isonormals(xval,zval,ypt,Dp,p);
p.FaceColor = 'yellow';
p.EdgeColor = 'none';
print('-painters','-djpeg','docs/pics/Code4_3');
~~~

~~~
{}{raw}
<figure>
  <img src="pics/Code4_3.jpg" alt="3dflow" style="width:50%">
  <p>Fig.4 Isosurfaces of the spanwise body force that result </br>in the optimal flow structure in Fig. 3 for the frequency </br>responses of Poiseuille flow with</br> \(Re = 2000\), \(k_x = k_z = 1\), and \(\omega = 0\). </br> This plot is generated using <a href="../channelFlow3D.m">svdfr/channelFlow3D.m</a></p>
</figure>
~~~