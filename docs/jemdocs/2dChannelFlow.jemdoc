# jemdoc: menu{MENU}{2dChannelFlow.html},addpackage{amsmath},addpackage{amssymb}
# jemdoc: addcss{jemdoc.css}
# jemdoc: addcss{bibover.css}
#include{masterFile_2.jeminc}
#include{mj-complete-bib_3.jeminc}
= $2$D channel flow (Orr-Sommerfeld operator)

~~~
{}{raw}
<figure>
  <img src="pics/channel_2dsection.jpg" alt="2dflow" style="width:60%">
  <figcaption>  Fig.\(1\) Two-dimensional channel flow geometry.</figcaption>
</figure>
~~~

The Orr-Sommerfeld equation (see [/javascript:cite('schmid2012stability') Schmid and Henningson]) governs the dynamics of 2D velocity 
fluctuations around the laminar channel flow,
\(
    \begin{align}\label{eq:0}
\partial_t\,\Delta \phi
\;=&\;
\left(
{\displaystyle \frac{1}{Re}} \Delta^{2} \, - \, \mathrm{i} \, k_x \, U(y) \, \Delta \, + \, \mathrm{i} \, k_x \, U''(y)
\right)
\phi \,+ \, \partial_y \, d_{1} \, - \, \mathrm{i} \, k_x \, d_{2}, 
\end{align}
\)
\n
where $y \in \left[ -1, 1 \right]$ is a spatial variable, $\phi$ is the streamfunction, $\mathbf d = [\,d_x\;\; d_y\,]^T$ is the body force vector, $Re$ is the Reynolds number, $k_x$ is the streamwise wavenumber, $U(y) = 1-y^2$ for Poiseuille flow and $U(y) = y$ for Couette flow, and $\Delta = \partial_{yy} - k_x^2$ is the Laplacian. 
\n
\n
The boundary conditions are given by
\(
\phi(\pm 1, t) \; = \;  [\partial_y \phi(\cdot , t)](\pm 1) \; = \; 0.
\)
\n
The desired outputs are the streamwise and wall-normal velocity fluctuations,
\(
\begin{array}{rcl}
u & \!\! = \!\! & \partial_y \, \phi, \\[0.15cm]
v & \!\! = \!\! & -\mathrm{i} \, k_x \, \phi.
\end{array}
\)
\n
After a temporal Fourier transform on Eq.~$\eqref{eq:0}$, the input-output differential equation representing the frequency response operator is given by
\(
  \begin{align}
    \begin{split}
\underbrace{\left(
{\displaystyle \frac{1}{Re}} \mathrm D^{4} \, + \, a_{2} (y) \, \mathrm D^{2} \, + \, a_{0}(y)
\right)}_{\mathcal A (\omega)}
\phi
\; &= \;
\underbrace{\left[\begin{array}{cc}
  -\mathrm D & \mathrm{i} \, k_x
\end{array}\right]}_{\mathcal B (\omega)}\left[\begin{array}{c}
  d_x\\
  d_y
\end{array}\right],\\
\left[\begin{array}{c}
  u\\
  v
\end{array}\right]\;&=\; \underbrace{\left[\begin{array}{c}
  \mathrm D\\
  -\mathrm i\, k_x
\end{array}\right]}_{\mathcal C (\omega)}\,\phi,
\end{split}\label{eq:sys}
\end{align}
\)
where $\mathrm D = \mathrm d / \mathrm dy$, and 
\(
\begin{array}{rcl}
a_{2} (y) & \!\! = \!\! & -\left(\, (2 \, k_x^2/Re) \, + \, \mathrm{i}\, k_x \, U \, + \, \mathrm{i} \, \omega \right),
\\[0.4cm]
a_{0} (y) & \!\! = \!\! &  (k_x^{4}/Re) \, + \, \mathrm{i} \, k_x^3 \, U \, + \, \mathrm{i} \, k_x \, U'' \, + \, \mathrm{i} \, \omega \, k_x^2.
\end{array}
\)
\n
Thus we cast Eq.~$\eqref{eq:sys}$ to the system representation,
\(
\begin{align}
    \left[\mathcal A(\omega)\, \phi(\cdot)\right] (y) 
    \;&=\; 
    \left[\mathcal B(\omega)\, {\mathbf d} (\cdot)\right](y),\notag
    \\
    \boldsymbol \xi (y)
    \;&=\; 
    \left[\mathcal C(\omega)\,  \phi(\cdot)\right](y),\label{eq:mot1c}
    \\
    [\mathcal{L}_{\pm 1} \,  \phi(\cdot)](\pm 1)  
    \;&=\; 0,
    \notag
  \end{align}  
\)
where $\boldsymbol{\xi} = [\,u \;\; v \;\; w\,]^T$.
=== Problem

Find the largest singular value of the frequency response operator for the Orr-Sommerfeld equation 
in a Poiseuille flow as a function of $k_x$ at $\omega = -0.3$ and $Re = 2000$.

=== Solution
A feedback interconnection of the frequency response operator with its adjoint can be used to compute singular values (see the [/javascript:cite('harkumjovJCP20') accompanying paper] and [/javascript:cite('Boyd1989') Boyd]),
\(
  \begin{align}
\left[
\begin{array}{cc}
  0 &\mathcal{B}\mathcal{B}^{\dagger} \\
   \mathcal{C}^{\dagger}\mathcal{C}&0
\end{array} \right] \left[ \begin{array}{c}
   \boldsymbol \phi(y)
   \\
   \boldsymbol \psi(y)
\end{array} \right]   
	\;&=\; 
\gamma 
\left[\begin{array}{cc}
  \mathcal{A} & 0\\
  0 & \mathcal{A}^{\dagger}
\end{array}\right]\left[ \begin{array}{c}
   \boldsymbol \phi (y)\\
   \boldsymbol \psi (y)
\end{array} \right], \notag
	\\
	[ \mathcal{L}_{\pm 1} \, \boldsymbol \phi(\cdot) ] (\pm 1)
	\;&=\; 
	0, \label{eq:feedback}
	\\
	[ \mathcal{L}^{\dagger}_{\pm 1} \, \boldsymbol \psi (\cdot) ] (\pm 1)
	\;&=\; 
	0, \notag
\end{align}
\)
where $(\cdot)^{\dagger}$ denotes adjoint of the operator $(\cdot)$ and $\boldsymbol \psi$ is the variable associated with the adjoint operator. The resulting eigenvalues determine the singular values in pairs of opposite signs, i.e., $\gamma = \pm \sigma$.
~~~
{}{matlab}
% Define independent variable
y = chebfun('y');

% Define the parameters of the problem:
omega = -0.3;                % frequency
Re = 2000;                   % Reynolds number
kxval = linspace(0.1,5,100); % streamwise wave-number
kxgrd = length(kxval);

U = 1 - y^2;                 % for Poiseuille flow, or U = y for Couette flow
Uy = diff(U);
Uyy = diff(U,2);

% Looping over different values of kx
svals = zeros(kxgrd,1);

for indx = 1:kxgrd

    kx = kxval(indx); kx2 = kx*kx; kx4 = kx2*kx2;

    % Define operator A
    A = chebop([-1 1]);
    a2 =  -( 2*kx^2/Re  +  1i*kx*U + 1i*omega );
    a0 =  kx^4/Re  +  1i*kx^3*U +  1i*kx*Uyy + 1i*omega*kx^2;
    A.op = @(y,phi) (diff(phi,4)/Re + a2*diff(phi,2) + a0*phi);

    % Specify boundary conditions
    A.lbc = @(phi) [phi;diff(phi)];
    A.rbc = @(phi) [phi;diff(phi)];

    % B operator
    B = chebop([-1 1]);
    B.op = @(y,d1,d2) (-diff(d1)  +  1i*kx*d2);

    % C operator
    C = chebop([-1 1]);
    C.op = @(y,phi) [diff(phi);-1i*kx*phi];
  
    % Solving for the principal singular value
    svals(indx) = svdfr(A,B,C,1);   % Compute only the largest singular value
    disp(indx);
end

%% Plot
semilogx(kxval,svals,'-k');
xlabel('$k_x$');
ylabel('$\sigma_0$');
print('-painters','-dsvg','docs/pics/Code2_1');
~~~

~~~
{}{raw}
<figure>
  <img src="pics/Code2_1.svg" alt="2dflow" style="width:50%">
  <figcaption>Fig.\(2\) Singular values of the frequency response operator of the </br>
Orr-Sommerfeld equation Eq. \eqref{eq:0}, with \(\omega = -0.3\) and \(Re = 2000\).</br> This plot is generated using <a href="../channelFlow2D.m">svdfr/channelFlow2D.m</a></figcaption>
</figure>
~~~

=== Problem
Find the largest singular value of the frequency response operator for the Orr-Sommerfeld equation 
in a pressure-driven channel flow as a function of $\omega$ at $k_x = 1$.

=== Solution
~~~
{}{matlab}
% the OS-equation as a function of omega at kx = 1.
% System parameters:
kx = 1; % streamwise wave-number
kx2 = kx*kx; kx4 = kx2*kx2;

omval = linspace(-0.5,0,100); % temporal frequency
omgrd = length(omval);

% Looping over different values of om
svals = zeros(omgrd,1);

for indom = 1:omgrd
    
    omega = omval(indom);

    % Define operator A
    A = chebop([-1 1]);
    a2 =  -( 2*kx^2/Re  +  1i*kx*U + 1i*omega );
    a0 =  kx^4/Re  +  1i*kx^3*U +  1i*kx*Uyy + 1i*omega*kx^2;
    A.op = @(y,phi) (diff(phi,4)/Re + a2*diff(phi,2) + a0*phi);

    % Specify boundary conditions
    A.lbc = @(phi) [phi;diff(phi)];
    A.rbc = @(phi) [phi;diff(phi)];

    % B operator
    B = chebop([-1 1]);
    B.op = @(y,d1,d2) (-diff(d1)  +  1i*kx*d2);

    % C operator
    C = chebop([-1 1]);
    C.op = @(y,phi) [diff(phi);-1i*kx*phi];
  
    % Solving for the principal singular value
    svals(indom) = svdfr(A,B,C,1);
    disp(indom);
end

%% Plotting the largest singular value as a function of om at a fixed kx
plot(omval,svals,'-k');
xlabel('$\omega$');
ylabel('$\sigma_0$');
print('-painters','-dsvg','docs/pics/Code2_2');
~~~

~~~
{}{raw}
<figure>
  <img src="pics/Code2_2.svg" alt="2dflow" style="width:50%">
  <figcaption>Fig.\(3\) Singular values of the frequency response operator of the </br>
Orr-Sommerfeld equation Eq. \eqref{eq:0}, with \(k_x = 1\) and \(Re = 2000\).</br> This plot is generated using <a href="../channelFlow2D.m">svdfr/channelFlow2D.m</a></figcaption>
</figure>
~~~

=== Problem
Plot the most amplified flow structures for the Orr-Sommerfeld equation in Poiseuille flow with $Re = 2000$, $k_x = 1$ and $\omega = -0.313$.

=== Solution
~~~
{}{matlab}
% System parameters:
Re = 2000;
kxval = [1 -1];        % streamwise wave-number
omval  = 0.313*[-1 1]; % temporal frequency

N = 100;               % number of Chebyshev points for plotting
yd = chebpts(N);


for n = 1:2

    omega = omval(n);
    kx = kxval(n); kx2 = kx*kx; kx4 = kx2*kx2;

    % Define operator A
    A = chebop([-1 1]);
    a2 =  -( 2*kx^2/Re  +  1i*kx*U + 1i*omega );
    a0 =  kx^4/Re  +  1i*kx^3*U +  1i*kx*Uyy + 1i*omega*kx^2;
    A.op = @(y,phi) (diff(phi,4)/Re + a2*diff(phi,2) + a0*phi);

    % Specify boundary conditions
    A.lbc = @(phi) [phi;diff(phi)];
    A.rbc = @(phi) [phi;diff(phi)];

    % B operator
    B = chebop([-1 1]);
    B.op = @(y,d1,d2) (-diff(d1)  +  1i*kx*d2);

    % C operator
    C = chebop([-1 1]);
    C.op = @(y,phi) [diff(phi);-1i*kx*phi];
  
    % Solving for the principal singular value
    [PhiAndPsi,sval] = svdfr(A,B,C,1);
    uandv = C(PhiAndPsi.blocks{1,1});   % First variable is the regular variable, phi. 
                                        % Note that C(Phi) gives the output, [u;v]
    u = uandv{1};                       % streamwise velocity
    v = uandv{2};                       % wall-normal velocity

    % discretized values for plotting
    uvec(:,n) = u(yd,1); vvec(:,n) = v(yd,1);

end

% Getting physical fields of u and v
kx = abs(kxval(1));
xval = linspace(0, 4*pi/kx, 100); % streamwise coordinate

Up = zeros(N,length(xval));   % physical value of u
Vp = zeros(N,length(xval));   % physical value of v

for indx = 1:length(xval)

    x = xval(indx);

    for n = 1:2

        kx = kxval(n);

        Up(:,indx) =  Up(:,indx) + uvec(:,n)*exp(1i*kx*x);
        Vp(:,indx) =  Vp(:,indx) + vvec(:,n)*exp(1i*kx*x);

    end

end

Up = real(Up); Vp = real(Vp); % only real part exists

%% Plotting the most amplified streamwise velocity structures
pcolor(xval,yd,Up); shading interp;
cb = colorbar('vert');
xlabel('$x$');
ylabel('$y$');
ax = gca;
ax.XTick = 0:3:12;
cb.Ticks = -3:1:3;
colormap jet;
print('-painters','-djpeg','docs/pics/Code2_3');

%% Plotting the most amplified wall-normal velocity structures
pcolor(xval,yd,Vp); shading interp;
cb = colorbar('vert');
xlabel('$x$');
ylabel('$y$');
ax = gca;
ax.XTick = 0:3:12;
cb.Ticks = -1.5:0.5:1.5;
colormap jet;
print('-painters','-djpeg','docs/pics/Code2_4');
~~~

~~~
{}{raw}
<figure>
  <img src="pics/Code2_3.jpg" alt="2dflow" style="width:50%">
  <figcaption>Fig.\(4\) Most amplified flow structures of the</br> streamwise velocity in 2D channel flow </br> with \(k_x = 1\) and \(Re = 2000\).</br> This plot is generated using <a href="../channelFlow2D.m">svdfr/channelFlow2D.m</a></figcaption>
</figure>
~~~

~~~
{}{raw}
<figure>
  <img src="pics/Code2_4.jpg" alt="2dflow" style="width:50%">
  <figcaption> Fig.\(5\) Most amplified flow structures of the</br> wall-normal velocity in 2D channel flow </br> with \(k_x = 1\) and \(Re = 2000\).</br> This plot is generated using <a href="../channelFlow2D.m">svdfr/channelFlow2D.m</a></figcaption>
</figure>
~~~


